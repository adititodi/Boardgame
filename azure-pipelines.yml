trigger:
  branches:
    include:
      - main

pool:
  name: Azure Pipelines
  demands:
    - maven
    - java

variables:
  mavenPOMFile: 'pom.xml'

stages:
- stage: BuildAndTest
  displayName: 'CI Stage'
  jobs:
  - job: Build
    steps:

    - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@3
      displayName: 'Prepare analysis on SonarCloud'
      inputs:
        SonarQube: 'SonarQube Cloud'
        organization: '321114110002'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: '321114110002_JAVA-CI-CD'
        cliProjectName: 'JAVA-CI-CD'
        cliSources: 'src'
        extraProperties: |
          sonar.java.binaries=target
          sonar.junit.reportPaths=target/surefire-reports
          sonar.jacoco.reportPaths=target/jacoco.exec
          sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

    - task: Maven@3
      displayName: 'Run Tests with JaCoCo'
      inputs:
        mavenPomFile: '$(mavenPOMFile)'
        goals: 'clean test'
        options: '-Pcoverage'

    - task: Maven@3
      displayName: 'Generate JaCoCo Report'
      inputs:
        mavenPomFile: '$(mavenPOMFile)'
        goals: 'jacoco:report'

    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: '$(mavenPOMFile)'
        goals: 'package'

    - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@3
      displayName: 'Run SonarCloud Analysis'

    - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@3
      displayName: 'Publish Quality Gate Result'

    - task: CopyFiles@2
      displayName: 'Copy Jar'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/target'
        Contents: '*.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        flattenFolders: true

    - task: CopyFiles@2
      displayName: 'Copy Manifest File'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          deployment-service.yaml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - script: |
        cp $(System.DefaultWorkingDirectory)/target/database_service_project-0.0.7.jar $(Build.ArtifactStagingDirectory)/app.jar
      displayName: 'Rename JAR to app.jar'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

- stage: Deploy
  displayName: 'CD Stage'
  dependsOn: BuildAndTest
  condition: succeeded()
  jobs:
  - deployment: DeployToAzure
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(Pipeline.Workspace)'

          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: BoardGameApp'
            inputs:
              azureSubscription: 'AzureforStudents'
              appType: 'webAppLinux'
              appName: 'BoardGameApp'
              package: '$(Pipeline.Workspace)/drop/app.jar'
              runtimeStack: 'TOMCAT|9.0-java11'
              startUpCommand: 'java -jar /home/site/wwwroot/app.jar --server.port=80'

          - script: |
              echo "Pulling ZAP Docker image..."
              docker pull ghcr.io/zaproxy/zaproxy:stable

              echo "Preparing output directory..."
              mkdir -p $(System.DefaultWorkingDirectory)/zap
              chmod 777 $(System.DefaultWorkingDirectory)/zap

              echo "Running ZAP full scan..."
              docker run --rm -u 0 \
                -v $(System.DefaultWorkingDirectory)/zap:/zap/wrk/:rw \
                ghcr.io/zaproxy/zaproxy:stable \
                zap-full-scan.py \
                -t https://boardgameapp-ayghd3hyfcbkbafd.centralindia-01.azurewebsites.net \
                -J zap_report.json \
                -r zap_report.html \
                -x zap_report.xml \
                -I
            displayName: 'Run OWASP ZAP Full Scan'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish ZAP Scan Report'
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/zap'
              ArtifactName: 'ZAP-Report'
